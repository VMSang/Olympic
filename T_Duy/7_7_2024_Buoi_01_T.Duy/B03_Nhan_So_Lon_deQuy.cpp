//chung minh cong thuc: (ab)%c = ((a%c)(b%c))%c
/*
Bi·ªÉu di·ªÖn a v√† b:
a = k‚ÇÅc + r‚ÇÅ, trong ƒë√≥ r‚ÇÅ = a%c (0 ‚â§ r‚ÇÅ < c)
b = k‚ÇÇc + r‚ÇÇ, trong ƒë√≥ r‚ÇÇ = b%c (0 ‚â§ r‚ÇÇ < c)
Khai tri·ªÉn ab:
ab = (k‚ÇÅc + r‚ÇÅ) * (k‚ÇÇc + r‚ÇÇ)
= k‚ÇÅk‚ÇÇc¬≤ + k‚ÇÅr‚ÇÇc + k‚ÇÇr‚ÇÅc + r‚ÇÅr‚ÇÇ
L·∫•y ph·∫ßn d∆∞ khi chia cho c:
(a*b) % c = (k‚ÇÅk‚ÇÇc¬≤ + k‚ÇÅr‚ÇÇc + k‚ÇÇr‚ÇÅc + r‚ÇÅr‚ÇÇ) % c
Ph√¢n t√≠ch t·ª´ng th√†nh ph·∫ßn:
k‚ÇÅk‚ÇÇc¬≤ % c = 0 (v√¨ k‚ÇÅk‚ÇÇc¬≤ = c * (k‚ÇÅk‚ÇÇc), lu√¥n chia h·∫øt cho c)
k‚ÇÅr‚ÇÇc % c = 0 (v√¨ k‚ÇÅr‚ÇÇc = c * (k‚ÇÅr‚ÇÇ), lu√¥n chia h·∫øt cho c)
k‚ÇÇr‚ÇÅc % c = 0 (v√¨ k‚ÇÇr‚ÇÅc = c * (k‚ÇÇr‚ÇÅ), lu√¥n chia h·∫øt cho c)

√Åp d·ª•ng t√≠nh ch·∫•t c·ªßa ph√©p chia l·∫•y d∆∞:
(a*b) % c = (0 + 0 + 0 + r‚ÇÅr‚ÇÇ) % c = r‚ÇÅr‚ÇÇ % c
Thay r‚ÇÅ v√† r‚ÇÇ:
(a*b) % c = ((a%c) * (b%c)) % c
*/

/*
c√°c giai ƒëo·∫°n c·∫£i thi·ªán thu·∫≠t to√°n:
gƒë1: √°p d·ª•ng tr·ª±c ti·∫øp (ab)%c = ((a%c)(b%c))%c   => tr√†n s·ªë khi ph·∫ßn d∆∞ qu√° l·ªõn
gƒë2: bi·ªÉu di·ªÖn b d·∫°ng nh·ªã ph√¢n:
    b = 2^k1 + 2^k2 + ... + 2^kn (bi·ªÉu di·ªÖn nh·ªã ph√¢n c·ªßa b)
    Khi ƒë√≥: a*b  = a*(2^k1 + 2^k2 + ... + 2^kn)
                = a*2^k1 + a*2^k2 + ... + a*2^kn
    (a*b)%c = ( (a*2^k1)%c + (a*2^k2)%c + ... + (a2^kn)%c ) % c
            ...(a%c * (2^k1)%c)%c...
            ...a%c * bit 1 == (2^k1)%c
                     bit 2 == 0
*/

#include <bits/stdc++.h>
using namespace std;
using long long = long long;

// nh∆∞·ª£c ƒëi·ªÉm [(ùëé % 10^18)√ó(b % 10^18)] ‚â§ 10^36
long long nhan_CongThucNguyenBan(long long a, long long b, long long c) {
    return ((a % c) * (b % c)) % c;
}


/* c·∫£i ti·∫øn c·ªßa ph√©p nh√¢n ·∫•n ƒë·ªô
(a*b) = a*b/2 + a*b/2 (b ch·∫µn)
      = a*b/2 * a + a*b/2 * a (b l·∫ª)
*/

long long nhan_nhi_Phan(long long a, long long b, long long c) {
    long long res = 0;
    a %= c; //ƒë·∫£m b·∫£o r·∫±ng gi√° tr·ªã c·ªßa a lu√¥n nh·ªè h∆°n c, tr√°nh tr√†n s·ªë
    while (b > 0) {
        if (b & 1) {
            res = (res + a) % c; //ph·∫ßn d∆∞ a khi b l·∫ª
        }
        //a nh√¢n 2 th√¨ b chia ƒë·∫£m b·∫£o khi tri·ªát ti√™u nhau l√† ƒë√∫ng
        //ch·ªâ chia d∆∞ ·ªü a v√¨ ch·ªâ c√≥ a tƒÉng l√™n, b gi·∫£m m√£i
        a *= 2 % c;
        b /= 2; // b·ªè bit cu·ªëi
    }
    return res;
}

//c√≥ th·ªÉ tr√†n ·ªü ch·ªó a*2 v·ªõi l·∫ßn g·ªçi ƒë·∫ßu ti√™n v·ªõi a r·∫•t l·ªõn nh√¢n 2
long long nhan_dequy(long long a, long long b, long long c) {
    if (b == 0)
        return 0;
    long long res = 0;
    if (b % 2 == 0)
        res = a % c;
    return (res + nhan_dequy((a * 2) % c, b / 2, c)) % c;
}

//kh·∫Øc ph·ª•c ch·ªâ c·∫ßn gi·∫£m b v√† nh√¢n 2 v√†o a khi c·∫ßn
long long multiply_modulo(long long a, long long b, long long M) {
    if (b == 0)
        return 0;
    long long t = multiply_modulo(a, b / 2, M) % M;
    if (b & 1)
        return ((t + t) % M + a % M) % M;
    else
        return (t + t) % M;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NUlong long);

    long long a, b, c;
    cin >> a >> b >> c;
    cout << nhan_dequy(a, b, c);
    return 0;
}
